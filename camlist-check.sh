#!/bin/bash
. ./config
. ./util_functions.sh

# Download the support page html file for camera-videoServer mapping info
filter_keyword="td class=\"cam-id\""
for eachVideoServer in "${VideoServerList[@]}"
do
	filter_keyword="$filter_keyword\|<td>$eachVideoServer"
done
echo $filter_keyword

curl $SupportPageUrl -u root:entonehd -o ./tmp/supportPage
cat ./tmp/supportPage | grep "$filter_keyword" | sed 's/.*\(<td.*\/td>\)/\1/g' > ./tmp/filter_a

# Get camera video server IP mapping using sed
sed '
:again
/cam-id/ {
N
/cam-id/ {
s/<td .*\(class.*<\/td>\).*\n.*\(<td class.*<\/td>\).*/\2/g
}
}
t again
' ./tmp/filter_a > ./tmp/filter_b

sed '
/cam-id">[A-Za-z0-9-]*/ {
N
/\n.*<td>[0-9]*.[0-9]*.[0-9]*.[0-9]*<\/td>/ {
s/<td class="cam-id">\([A-Za-z0-9-]*\).*\n.*<td>\([0-9]*.[0-9]*.[0-9]*.[0-9]*\).*/\1 \2/g
}
}' ./tmp/filter_b > ./tmp/CameraVideoServerMapping


# Run Auto SSH
#process VideoServerList
for eachVideoServer in "${VideoServerList[@]}"
do
	echo $eachVideoServer
	scp -o StrictHostKeyChecking=no -i $ServerSshKey ubuntu@$eachVideoServer:/home/ubuntu/.uploadRate.json ./tmp/$eachVideoServer.uploadRate.json
done

scp -o StrictHostKeyChecking=no -i $ServerSshKey ./prosody_console_cmd.sh ubuntu@$XmppServerAddress:/home/ubuntu/
ssh -o StrictHostKeyChecking=no -i $ServerSshKey ubuntu@$XmppServerAddress "/home/ubuntu/prosody_console_cmd.sh > /home/ubuntu/camera_online_status.txt; cat /home/ubuntu/camera_online_status.txt | strings" > ./tmp/camera_online_status.txt

rm ./tmp/activeCamera.txt
i=0
for eachVideoServer in "${VideoServerList[@]}"
do
	./extract_bitrate.sh ./tmp/$eachVideoServer.uploadRate.json ./tmp/camera_online_status.txt ./tmp/CameraVideoServerMapping $eachVideoServer > ./tmp/activeCamera.$eachVideoServer.txt
	activeCameraNumber=`cat ./tmp/activeCamera.$eachVideoServer.txt | wc -l`
	ActiveNumberArray[$i]=$activeCameraNumber
	i=$(( $i+1 ))
	echo "==== VideoServer: $eachVideoServer ====ActiveCameraNum: $activeCameraNumber ======" >> ./tmp/activeCamera.txt
	cat ./tmp/activeCamera.$eachVideoServer.txt >> ./tmp/activeCamera.txt
done

TOTAL_CAM=`cat ./tmp/activeCamera.txt | wc -l`
TOTAL_CAM=`echo "$TOTAL_CAM-${#VideoServerList[@]}" | bc`

URGENT_activeCamera=0
for eachActiveNumber in "${ActiveNumberArray[@]}"
do
	if [ $eachActiveNumber -gt $CAM_THRESHOLD ];then
		URGENT_activeCamera=1
	fi
done

Mail_Content="Result generated by $0 from $ip_addr
connect.fusionhome.entone.com
==================================================
Total Active Monitor: $TOTAL_CAM
CameraID     Bitrate(kbps)
`cat ./tmp/activeCamera.txt`"

# send email every day on 00:00 am
if [ "$Current_hour" -eq "$KEEP_ALIVE_EMAIL_HOUR" ] && [ "$Current_minute" -eq "$KEEP_ALIVE_EMAIL_MINUTE" ]; then
Mail_Subject="FusionHome Video server checking"
SendMail "$Mail_Subject" "$EmailRecipient" "$Mail_Content"
fi

# Send email if number of cam over Maximum value
if [ $URGENT_activeCamera == 1 ] ; then
Mail_Subject="Subject: Urgent !!! FusionHome Video server checking"
SendMail "$Mail_Subject" "$EmailRecipient" "$Mail_Content"
fi
